---
import { getCourses } from '@/utils/courses';
import { groups } from 'd3-array';
import { getEntry } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import Badge from './../Badge.astro';

let { universityId } = Astro.props;

const isBachelorCourse = (course: CollectionEntry<'courses'>) =>
  course.data.addressesProgrammeOfStudyLevels?.find(
    (d) => d.id.indexOf('bachelor') > -1
  );
const isMasterCourse = (course: CollectionEntry<'courses'>) =>
  course.data.addressesProgrammeOfStudyLevels?.find(
    (d) => d.id.indexOf('master') > -1
  );

const courses = await getCourses(universityId);
const coursesGroupedBySemester = groups(courses, (d) => d.data.semester);
const masterCourses = courses.filter(isMasterCourse);
const bachelorCourses = courses.filter(isBachelorCourse);
---

<section>
  <p>
    Per academic year, KIT offers {courses.length} courses related to accelerator
    research of which
    {!bachelorCourses.length && <span>all addresses master students.</span>}
  </p>
  <ul class="grouped-list">
    {
      coursesGroupedBySemester.map((entry) => (
        <li class="grouped-list-item">
          <div class="grouped-list-item__body">
            <h4 class="grouped-list-item__body-title">{entry[0]}</h4>
            <span class="grouped-list-item__body-count">
              ({entry[1].length} entries)
            </span>
          </div>
          <ul class="grouped-list-item__items">
            {entry[1].map(async (item) => (
              <li class="grouped-list-item__item grouped-list-item__item--course">
                <span class="course__badges">
                  {
                    <Badge
                      prefix="Type"
                      text={
                        (await getEntry(item.data.isInstanceOfTeachingEvent))
                          .data.term.full.en
                      }
                      size="medium"
                    />
                  }
                  <Badge
                    size="medium"
                    prefix="contact hours"
                    text={item.data.sws + ''}
                  />
                  {isBachelorCourse(item) && (
                    <Badge
                      alt="Bachelor Program"
                      prefix="Programme"
                      text="Bachelor"
                      size="medium"
                    />
                  )}
                  {isMasterCourse(item) && (
                    <Badge
                      alt="Bachelor Program"
                      prefix="Programme"
                      text="Master"
                      size="medium"
                    />
                  )}
                </span>
                <span class="course__title">{item.data.label.fullName.en}</span>
              </li>
            ))}
          </ul>
        </li>
      ))
    }
  </ul>
</section>

<style>
  .course__title {
    display: block;
  }
</style>
