---
export type ResearchAgenda = ResearchAgendaItem[];

export interface ResearchAgendaItem {
  id: string;
  path: string;
  name: string;
  group?: string;
  label: string;
  description?: string;
  "links:agenda-topics"?: string[];
  "links:agenda-facilities"?: string[];
  usedInResearchAgenda: boolean;
  links: string[];
  "links:agenda-objectives"?: string[];
  collection?: string;
  nameIsAcronymFor?: string;
  userGroup?: string;
  facilityName?: string;
  lifeCycleStage?: string;
  isInGermany?: boolean;
  additionalUserGroups?: string[];
  facilityVersion?: string;
  isBmbfFis?: boolean;
}

import { Image } from "astro:assets";
import type { ImageMetadata } from 'astro';
import _data from "./research-agenda.json";

let data: ResearchAgenda = _data;

export interface Props {
  name: string;
}

const { name } = Astro.props;

const item = data.find((item) => item.name === name);


const imagePath = "/src/astro/assets/svg/agenda/agenda.objectives." + name + ".svg";
const images = import.meta.glob<{ default: ImageMetadata }>("/src/astro/assets/svg/agenda/agenda.objectives.*.svg")

  

if (!images[imagePath])
  throw new Error(
    `"${imagePath}" does not exist in glob: "/src/astro/assets/svg/agenda/agenda.objectives.*.svg"`
  );

const image = images[imagePath]();
---

<figure class="objective">
  <Image src={image} alt="..." />
  <figcaption>
    <p class="md">
      <strong>{item.label}: </strong>{item.description}
    </p>
  </figcaption>
</figure>

<style lang="stylus">
figure.objective
  height 15rem

  position relative
  img

    width calc(20 * var(--baseline-height))
    height calc(20 * var(--baseline-height))
    position absolute
    left calc(-6 * var(--baseline-height))
    top calc(-.5 * var(--baseline-height))
    z-index -1

  figcaption
    margin-left calc(12 * var(--baseline-height))
    height calc(16 * var(--baseline-height))
    z-index 10
</style>
