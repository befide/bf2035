
label {
  display flex;
  margin 0.5em;
  padding 4px 4px 6px 6px;
  border 1px solid #005a9c;
  border-radius 5px;
  width 15rem;
  justify-content space-between;
  align-items center;
  // background-color: #eeeeee;
}

label .label {
  display inline-block;
  user-select none;
  flex 1 1 5rem;
  white-space: nowrap;
  color: var(--color-text-base)
}

// label input[role="switch"] {
// opacity: 0;
// }
label input[role='switch'] ~ .state {
  user-select none;
  flex 0 0 5rem;
  display flex;
}

label input[role='switch'] ~ .state > .switch-container {
  position relative;
  top 2px;
  display inline-block;
  border 2px solid black;
  width 3rem;
  height 1rem;
  border-radius 11px;
  flex 40px;
}

label input[role='switch'] ~ .state > .switch-container > .switch-knob {
  position relative;
  top 1px;
  left 2px;
  display inline-block;
  border 2px solid red;
  border-radius 9px;
  width 14px;
  height 14px;
  background gray;
  opacity 1;
}

.switch-label {
  flex 0 0 14rem;
  display block;
}

.state > span.off, .state span.off {
  width 4rem;
  display block-inline;
}

label input[role='switch']:not(:checked) ~ .state span.on {
  display none;
}

label input[role='switch']:checked ~ .state span.off {
  display none;
}

label input[role='switch']:checked ~ .state > .switch-container > .switch-knob {
  left 20px;
  border-color green;
  box-shadow 0px 0px 5px inset #aaaaaa;
}

label.focus, label:hover {
  padding 2px 2px 4px 4px;
  border-width 2px;
  outline none;
  background-color #def;
  cursor pointer;
}

label.focus span.switch-container, label:hover span.switch-container {
  background-color white;
}
